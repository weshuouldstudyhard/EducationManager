<?xml version="1.0" encoding="UTF-8"?>
<!--
	Application context definition for PetClinic on Hibernate.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			">
	

   <!--SSH框架的配置顺序:jdbc.properties->dataSource->sessionFactory
        ->xxxDao->xxxService->xxxAction -->
	
	<!-- 加载MySQL驱动的配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<!-- 配置dataSource连接池 直接使用dbcp的连接池-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" 
		p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.url}" 
		p:username="${jdbc.username}" 
		p:password="${jdbc.password}" />

 
 	<!--配置 Hibernate SessionFactory:去掉p:mappingResources="petclinic.hbm.xml" -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource" >
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
		<!-- 加载配置文件Resource[] mappingLocations:1.前面加上classpath,2.可以使用通配符 -->
		<property name="mappingLocations" value="classpath:cn/edu/fjnu/cdio4/xplan/domain/*.hbm.xml" />
	</bean>


    <!-- 事物管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />
	
	<!-- 添加命名空间tx: 事务属性:对哪些方法进行 -->
	<!-- transaction-manager=transactionManager,默认配置,所有可以不配置 -->
	<tx:advice id="txAdvice">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<!-- 添加命名空间aop:切入点:对哪些包和类进行事务控制，这些切入点都是针对接口进行事务管理，如果针对实现的，则需要添加cglib的jar包 -->
	<aop:config>
		<aop:advisor pointcut="execution(* cn.edu.fjnu.cdio4.xplan.service.I*Service.*(..))"
			advice-ref="txAdvice" />
	</aop:config>


	<context:annotation-config />
	<tx:annotation-driven />
	<context:mbean-export />
	
	<!-- 
	      在src/main/resources创建的文件夹(其实一个包),通过通配符引入 
	注意：每个一个实体即domain中的东西，要在在manager包下的对应的xxxxManager.xml进行注入
	注入一般都是注入service，至于dao在commentManager.xml文件中已经注入了
	-->
	<import resource="classpath:manager/*Manager.xml" />
	
</beans>
