<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
  	<!-- OpenSessionInViewFilter必须放到最前面 -->
	<filter>
		<filter-name>OpenSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
	</filter>
	<!-- 告诉服务器，从哪里寻找applicationContext.xml文件 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>

	<!-- 配置SPring监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

   <!-- 配置struts2的过滤器 -->
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	
	<!-- 
	filter-mapping元素用来声明Web应用中的过滤器映射。过滤器可被映射到一个servlet或一个URL模式。
	将过滤器映射到一个servlet中会造成过滤器作用于servlet上。将过滤器映射到一个URL模式中
	则可以将过滤器应用于任何资源，只要该资源的URL与URL模式匹配。
	过滤是按照部署描述符的filter-mapping元素出现的顺序执行的。
	 -->
	<filter-mapping>
		<filter-name>OpenSessionInViewFilter</filter-name>
		<!-- 只针对xxxAction开启OpenSessionInViewFilter,css,js,gif 
		让所有都带action的后缀的请求才能通过，因此在struts.xml文件中要配置一些请求自动添加后缀action-->
		<url-pattern>*.action</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 默认的欢迎页面 -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

</web-app>
